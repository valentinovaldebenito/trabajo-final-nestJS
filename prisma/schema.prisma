// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Creación de los Modelos:
model Usuario {
  //El id del usuario
  id Int @id @default(autoincrement())
  correo String @unique // @[nombreDecorador] son los decoradores que utiliza prisma
  contrasenia String? // "?" Significa que el atributo puede ser nulo
  productosCargados Producto[] // Toma la referencia de los objetos relacionados al usuario
  ediciones Ediciones[] @relation("ediciones_entidad") // Las ediciones realizadas a la entidad
  edicionesUsuario Ediciones[] @relation("usuario_edita") // Las ediciones que realizó el usuario

  disponible Boolean? @default(true)

  rol Rol?

  //Queries mas rapidas por el index
  //Filtra los resultado de antemano
  //Organiza internamente el almacenamiento de los datos en funcion de este campo
  @@index([disponible])
}

enum Rol {
  SUPERADMIN
  ADMIN
  COMUN
}

model Producto {
  id Int @id @default(autoincrement())
  marca String?
  descripcion String?
  usuarioCarga Usuario? @relation(fields: [usuarioCargaId], references: [id])  // Toma la referencia del objeto de usuario
  usuarioCargaId Int? // Sólo se encarga de linkear el id del usuario
  precioUnitario Decimal?
  cantStock Int?

  ediciones Ediciones[] @relation("producto_editado")

  activo Boolean?

  @@index([activo])
}


model Ediciones {
  id Int @id @default(autoincrement())
  descripcion  String?
  fecha DateTime? @default(now())
  // Hace referencia a las ediciones que
  // se realizaron a la entidad
  usuario Usuario? @relation("ediciones_entidad", fields: [usuarioId], references: [id])
  usuarioId Int?
  // Hace referencia a que usuario realizó
  // la edición
  usuarioEditor Usuario? @relation("usuario_edita", fields: [usuarioEditorId], references: [id])
  usuarioEditorId Int?

  producto Producto? @relation("producto_editado", fields: [productoId], references: [id])
  productoId Int?
}


